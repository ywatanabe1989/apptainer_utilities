#!/bin/bash
# Time-stamp: "2024-12-08 08:05:01 (ywatanabe)"
# File: ./apptainer_utilities/src/005_build.sh.source

################################################################################
# Internal build function
################################################################################
_apptainer_build() {
    local def_file="$1"
    local output="$2"
    local log="$3"
    shift 3
    local options="$@"

    ee "apptainer build $options $output $def_file 2>&1 | tee $log"
}

################################################################################
# Core build functions from existing containers
################################################################################

apptainer_build_sif2sand() {
    if [[ "$1" == "-h" || "$1" == "--help" ]]; then
        echo "Converts SIF to sandbox format"
        echo "Example: apptainer_build_sif2sand"
        echo "Usage: ./apptainer/image.sif -> ./apptainer/image.sandbox"
        return 0
    fi

    local LOG_PATH="${APPTAINER_SANDBOX_IMAGE_LOCAL_PATH%.*}_from_sif.log"

    if [ -f $APPTAINER_STATIC_IMAGE_LOCAL_PATH ]; then
        ee "apptainer build --sandbox $APPTAINER_SANDBOX_IMAGE_LOCAL_PATH $APPTAINER_STATIC_IMAGE_LOCAL_PATH 2>&1 | tee ${LOG_PATH}"
    else
        echo "Error: $APPTAINER_STATIC_IMAGE_LOCAL_PATH not found"
        return 1
    fi
}

apptainer_build_sand2sif() {
    if [[ "$1" == "-h" || "$1" == "--help" ]]; then
        echo "Converts sandbox to SIF format"
        echo "Example: apptainer_build_sand2sif"
        echo "Ussage: ./apptainer/image.sandbox -> ./apptainer/image.sif"
        return 0
    fi

    local LOG_PATH="${APPTAINER_STATIC_IMAGE_LOCAL_PATH%.*}_from_sandbox.log"

    if [ -d $APPTAINER_SANDBOX_IMAGE_LOCAL_PATH ]; then
        ee "apptainer build $APPTAINER_STATIC_IMAGE_LOCAL_PATH $APPTAINER_SANDBOX_IMAGE_LOCAL_PATH 2>&1 | tee ${LOG_PATH}"
    else
        echo "Error: $APPTAINER_SANDBOX_IMAGE_LOCAL_PATH not found"
        return 1
    fi
}

################################################################################
# Build functions from definition files
################################################################################

apptainer_build_def2sif() {
    if [[ "$1" == "-h" || "$1" == "--help" ]]; then
        echo "Builds SIF from definition file"
        echo "Example: apptainer_build_def2sif recipe.def --fakeroot --remote"
        echo "Output: recipe.sif, recipe.log"
        return 0
    fi

    DEFINITION_FILE=$1
    shift
    OPTIONS="$@"

    BASE_NAME="${DEFINITION_FILE%.*}"
    STATIC_IMAGE_PATH=${BASE_NAME}.sif
    LOG_PATH=${BASE_NAME}.log

    _apptainer_build "$DEFINITION_FILE" "$STATIC_IMAGE_PATH" "$LOG_PATH" "$OPTIONS"
}

apptainer_build_def2sand() {
    if [[ "$1" == "-h" || "$1" == "--help" ]]; then
        echo "Builds sandbox from definition file"
        echo "Example: apptainer_build_def2sand recipe.def --fakeroot --remote"
        echo "Output: recipe.sandbox, recipe_sandbox.log"
        return 0
    fi

    DEFINITION_FILE=$1
    shift
    OPTIONS="$@"

    BASE_NAME="${DEFINITION_FILE%.*}"
    SANDBOX_IMAGE_PATH=${BASE_NAME}.sandbox
    LOG_PATH=${BASE_NAME}_sandbox.log

    _apptainer_build "$DEFINITION_FILE" "$SANDBOX_IMAGE_PATH" "$LOG_PATH" --fix-perms --sandbox "$OPTIONS"
    if [ -d "$SANDBOX_IMAGE_PATH" ]; then
        _organize_sandbox "$DEFINITION_FILE" "$SANDBOX_IMAGE_PATH" "$LOG_PATH"
    fi
}

# Aliases
alias apptainer_build_sif2sand=abuild_sif2sand
alias apptainer_build_sand2sif=abuild_sand2sif
alias apptainer_build_def2sif=abuild_def2sif
alias apptainer_build_def2sand=abuild_def2sand

# EOF
